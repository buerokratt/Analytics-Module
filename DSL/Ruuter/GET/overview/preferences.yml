check_for_cookie:
  switch:
    - condition: ${incoming.headers.cookie == null || incoming.headers.cookie == ""}
      next: return_unauthorized
  next: extract_request_data

extract_request_data:
  assign:
    cookie: ${incoming.headers.cookie}
  next: check_if_authorized

check_if_authorized:
  template: templates/check-user-authority
  requestType: post
  headers:
    cookie: ${cookie}
  result: authority_result
  next: check_authority_result

check_authority_result:
  switch:
    - condition: ${authority_result !== "false"}
      next: get_metrics_preferences
  next: return_unauthorized    

get_metrics_preferences:
  call: http.post
  args:
    url: "[#ANALYTICS_RESQL]:[#ANALYTICS_RESQL_PORT]/overview-metric-preferences"
    body:
      user_id_code: ${authority_result.idCode}
  result: metrics
  next: return_value

return_value:
  return: ${metrics.response.body}
  next: end

return_unauthorized:
  status: 401
  return: "unauthorized"
  next: end
