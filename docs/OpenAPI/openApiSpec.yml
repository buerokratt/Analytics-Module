openapi: 3.0.3
info:
  title: Analytics module API
  version: 0.1.0
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
  description: Component responsible for analytics in the Bürokratt network.
servers:
  - url: 'https://ruuter.dev.buerokratt.ee/an'
tags:
  - name: analytics
    description: Bürokratt's analytics module
  - name: metrics
    description: endpoints related to metrics
  - name: odp
    description: endpoints related to odp
  - name: overview
    description: endpoints related to overview
  - name: buerokratt
    description: endpoints related to buerokratt
  - name: chat
    description: endpoints related to chat
  - name: chats
    description: endpoints related to chats
  - name: csa
    description: endpoints related to csa
  - name: feedback
    description: endpoints related to feedback
  - name: mocks
    description: endpoints related to mock
paths:
  /intents:
    get:
      tags:
        - metrics
      summary: Retrieve intents
      operationId: getIntents
      parameters:
        - name: start
          in: query
          description: Start of the range
          required: true
          schema:
            type: string
            format: date-time
        - name: end
          in: query
          description: End of the range
          required: true
          schema:
            type: string
            format: date-time
        - name: intent
          in: query
          description: The intent to retrieve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Required parameters were not provided
    post:
      tags:
        - metrics
      summary: Create intent
      operationId: postIntents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                start:
                  type: string
                  format: date-time
                  description: Start of the range
                end:
                  type: string
                  format: date-time
                  description: End of the range
                intent:
                  type: string
                  description: The intent to retrieve
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Required parameters were not provided
  /dataset:
    get:
      tags:
        - odp
      summary: Retrieve dataset metadata
      operationId: getDataset
      parameters:
        - in: query
          name: datasetId
          schema:
            type: string
          required: true
          description: The ID of the dataset to retrieve
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dataset'
        '400':
          description: Required parameters were not provided
    post:
      tags:
        - odp
      summary: Create a new dataset
      operationId: postDataset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dataset'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetOutput'
        '400':
          description: Required parameters were not provided
  /scheduled-reports:
    get:
      tags:
        - odp
      summary: Get all scheduled reports
      operationId: getScheduledReports
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledReports'
        '400':
          description: Error occurred
  /settings:
    get:
      tags:
        - odp
      summary: Get ODP settings
      operationId: getSettings
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODPSettings'
        '400':
          description: Error occurred
    post:
      tags:
        - odp
      summary: Update ODP settings
      operationId: postSettings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ODPSettings'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ODPSettings'
        '400':
          description: Error occurred
  /values:
    get:
      tags:
        - odp
      summary: Get keywords, categories, regions, and licences values based on language
      operationId: getValues
      parameters:
        - in: query
          name: lang
          schema:
            type: string
          description: The language parameter
          required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValuesData'
        '400':
          description: Error occurred
  /metrics:
    get:
      tags:
        - overview
      summary: Retrieve data for a specific metric
      operationId: getMetricsData
      parameters:
        - in: query
          name: metric
          schema:
            type: string
            enum:
              - total_chats_day
              - total_chats_month
              - total_chats_no_csa_day
              - avg_chats_by_month
              - avg_chats_by_week
              - avg_chats_no_csa_by_month
              - avg_chats_no_csa_by_week
              - avg_waiting_time_day
              - avg_waiting_time_week
              - total_forwarded_chats_yesterday
              - chat-activity
          description: The metric parameter
          required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsData'
        '400':
          description: Error occurred
          content:
            text/plain:
              schema:
                type: string
                example: "Invalid metric requested"
    post:
      tags:
        - overview
      summary: Retrieve analytics metrics data
      operationId: postMetricsData
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsDataInput'
      responses:
        '200':
          description: Analytics metrics data
          content:
            text/csv:
              schema:
                type: string
                description: Metrics data in CSV format
        '400':
          description: Bad request. The client request is invalid
        '500':
          description: Internal server error. An error occurred on the server
  /preferences:
    get:
      tags:
        - overview
      summary: Retrieve user preferences based on cookie
      operationId: getPreferences
      parameters:
        - in: header
          name: cookie
          schema:
            type: string
          required: true
          description: The user's cookie
      responses:
        '200':
          description: User's metrics preferences
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                description: The user's preferences in a JSON format
        '401':
          description: Unauthorized. The user's cookie is invalid or missing
        '500':
          description: Internal server error. An error occurred on the server
    post:
      tags:
        - overview
      summary: Update user preferences based on cookie and request body
      operationId: updatePreferences
      parameters:
        - in: header
          name: cookie
          schema:
            type: string
          required: true
          description: The user's cookie
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreferencesUpdateBody'
      responses:
        '200':
          description: User's updated metrics preferences
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                description: The updated user's preferences in a JSON format
        '400':
          description: Bad request. Required parameters are missing
        '401':
          description: Unauthorized. The user's cookie is invalid or missing
        '500':
          description: Internal server error. An error occurred on the server
  /negative-feedback:
    get:
      tags:
        - analytics
      summary: Fetch negative feedback based on user's cookie and request parameters
      operationId: fetchNegativeFeedback
      parameters:
        - in: header
          name: cookie
          schema:
            type: string
          required: true
          description: The user's cookie
        - in: query
          name: start
          schema:
            type: string
            format: date-time
          required: true
          description: The start date
        - in: query
          name: end
          schema:
            type: string
            format: date-time
          required: true
          description: The end date
        - in: query
          name: events
          schema:
            type: string
          required: true
          description: The events, comma-separated
      responses:
        '200':
          description: Negative feedback
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                description: The fetched negative feedback in a JSON format
        '401':
          description: Unauthorized. The user's cookie is invalid or missing
        '500':
          description: Internal server error. An error occurred on the server
  /testing:
    get:
      tags:
        - analytics
      summary: Fetch test message from server
      operationId: fetchTestMessage
      responses:
        '200':
          description: Test message
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                description: The fetched test message in a JSON format
        '500':
          description: Internal server error. An error occurred on the server
  /byk-modified-intents:
    post:
      tags:
        - buerokratt
      summary: Retrieve modified intents by period
      operationId: fetchModifiedIntents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeData'
      responses:
        '200':
          description: Modified intents data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntentData'
        '400':
          description: Required parameters were not provided
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error. An error occurred on the server
  /byk-new-intents:
    post:
      tags:
        - buerokratt
      summary: Retrieve new intents by period
      operationId: fetchNewIntents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeData'
      responses:
        '200':
          description: New intents data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IntentData'
        '400':
          description: Required parameters were not provided
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error. An error occurred on the server
  /byk-avg-response-speed:
    post:
      tags:
        - buerokratt
      summary: Retrieve average response speed by period
      operationId: fetchAvgResponseSpeed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeData'
      responses:
        '200':
          description: Average response speed data
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Required parameters were not provided
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error. An error occurred on the server
  /byk-avg-sessions-time:
    post:
      tags:
        - buerokratt
      summary: Retrieve average sessions time by period and options
      operationId: fetchAvgSessionsTime
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OptionsData'
      responses:
        '200':
          description: Average sessions time data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        '400':
          description: Required parameters were not provided
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error. An error occurred on the server
  /byk-intents:
    post:
      tags:
        - buerokratt
      summary: Retrieve intents by period and options
      operationId: fetchIntents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OptionsData'
      responses:
        '200':
          description: Intents data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        '400':
          description: Required parameters were not provided
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error. An error occurred on the server
  /byk-pct-correctly-understood:
    post:
      tags:
        - buerokratt
      summary: Retrieve percentage of correctly understood inputs by period
      operationId: fetchPctCorrectlyUnderstood
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeData'
      responses:
        '200':
          description: Percentage of correctly understood data
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Required parameters were not provided
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error. An error occurred on the server
  /status:
    post:
      tags:
        - chat
      summary: Fetches status data for specified events and metric in a given period
      operationId: fetchStatus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusData'
      responses:
        '200':
          description: Status data for specified events and metric
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        '400':
          description: Missing parameters
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error. An error occurred on the server.
  /avg-median-waiting-time:
    post:
      tags:
        - chats
      summary: Fetches average and median waiting time data for a given period
      operationId: fetchAvgMedianWaitingTime
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OptionsData'
      responses:
        '200':
          description: Average and Median waiting time data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        '400':
          description: Missing parameters
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error. An error occurred on the server.
  /chat-avg-duration:
    post:
      tags:
        - chats
      summary: Fetches average duration data for a chat within a given period
      operationId: fetchChatAverageDuration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeData'
      responses:
        '200':
          description: Average chat duration data
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Missing parameters
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error. An error occurred on the server.
  /chat-avg-num-of-messages:
    post:
      tags:
        - chats
      summary: Fetches average number of messages data for a chat within a given period
      operationId: fetchChatAverageNumberOfMessages
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeData'
      responses:
        '200':
          description: Average number of chat messages data
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Missing parameters
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error. An error occurred on the server.
  /chat-idle-count:
    post:
      tags:
        - chats
      summary: Fetches idle chat count data within a given period
      operationId: fetchChatIdleCount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeData'
      responses:
        '200':
          description: Idle chat count data
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Missing parameters
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error. An error occurred on the server.
  /chat-total-count:
    post:
      tags:
        - chats
      summary: Fetches chat count data with options for chatbot-only and with-csa within a given period
      operationId: fetchChatTotalCount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OptionsData'
      responses:
        '200':
          description: Chat count data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        '400':
          description: Missing parameters
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error. An error occurred on the server.
  /contact-information-fulfilled:
    post:
      tags:
        - chats
      summary: Fetches data related to contact information fulfilment with different options within a given period
      operationId: fetchContactInfoFulfilled
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OptionsData'
      responses:
        '200':
          description: Contact information fulfilment data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        '400':
          description: Missing parameters
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error. An error occurred on the server.
  /avg-chat-time:
    post:
      tags:
        - csa
      summary: Fetches the average chat time based on the specified metric within a given date range
      operationId: fetchAvgChatTime
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricData'
      responses:
        '200':
          description: Average chat time data
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Missing parameters
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error. An error occurred on the server.
  /avg-present-number:
    post:
      tags:
        - csa
      summary: Fetches the average present number based on the specified metric within a given date range
      operationId: fetchAvgPresentNumber
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricData'
      responses:
        '200':
          description: Average present number data
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Missing parameters
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error. An error occurred on the server.
  /avg-time-picking-up-chat:
    post:
      tags:
        - csa
      summary: Fetches the average time for picking up chats based on the specified metric within a given date range
      operationId: fetchAvgTimePickingUpChat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricData'
      responses:
        '200':
          description: Average time for picking up chats data
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Missing parameters
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error. An error occurred on the server.
  /chat_forwards:
    post:
      tags:
        - csa
      summary: Fetches the number of chat forwards based on the specified metric within a given date range
      operationId: fetchChatForwards
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricData'
      responses:
        '200':
          description: Number of chat forwards data
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Missing parameters
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error. An error occurred on the server.
  /total-chats:
    post:
      tags:
        - csa
      summary: Fetches the total number of chats based on the specified metric within a given date range
      operationId: fetchTotalChats
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricData'
      responses:
        '200':
          description: Total number of chats data
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Missing parameters
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error. An error occurred on the server.
  /avg-feedback-to-buerokratt-chats:
    post:
      tags:
        - feedback
      summary: Fetches the average feedback to "Buerokratt" chats based on the specified metric within a given date range
      operationId: fetchAvgFeedbackBuerokrattChats
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricData'
      responses:
        '200':
          description: Average feedback data
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Missing parameters
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error. An error occurred on the server.
  /chats-with-negative-feedback:
    post:
      tags:
        - feedback
      summary: Fetches the chats with negative feedback based on specified events within a given date range
      operationId: fetchChatsWithNegativeFeedback
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatsWithNegativeFeedbackData'
      responses:
        '200':
          description: Chats with negative feedback data
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Missing parameters
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error. An error occurred on the server.
  /csa-chats-feedback-nps:
    post:
      tags:
        - feedback
      summary: Fetches the CSA chats feedback NPS (Net Promoter Score) based on a specified metric within a given date range
      operationId: fetchCsaChatsFeedbackNPS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricData'
      responses:
        '200':
          description: CSA chats feedback NPS data
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Missing parameters
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error. An error occurred on the server.
  /selected-csa-feedback-nps:
    post:
      tags:
        - feedback
      summary: Fetches the selected CSA feedback NPS (Net Promoter Score) based on a specified metric within a given date range excluding specified CSAs
      operationId: fetchSelectedCsaFeedbackNPS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelectedCsaFeedbackNpsData'
      responses:
        '200':
          description: Selected CSA feedback NPS data
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Missing parameters
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error. An error occurred on the server.
  /mock-custom-jwt-userinfo:
    post:
      tags:
        - mocks
      summary: Mocks a custom JSON Web Token (JWT) user information response
      operationId: mockCustomJwtUserInfo
      responses:
        '200':
          description: Mocked JWT user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MockedJwtUserInfo'
        '500':
          description: Internal server error. An error occurred on the server.
  /delete-scheduled-report:
    post:
      tags:
        - odp
      summary: Deletes a scheduled report
      operationId: deleteScheduledReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteScheduledReportRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
        '400':
          description: Invalid input
  /delete-settings:
    post:
      tags:
        - odp
      summary: Deletes a specified ODP key
      operationId: deleteOdpKey
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResponse'
        '400':
          description: Invalid input
  /download:
    post:
      tags:
        - odp
      summary: Download the metrics
      operationId: getMetrics
      requestBody:
        description: Parameters for downloading the metrics
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Metrics'
      responses:
        '200':
          description: Successful operation
          content:
            text/csv:
              schema:
                type: string
              example: "column1,column2\nvalue1,value2"
          headers:
            Content-disposition:
              schema:
                type: string
              example: "attachment;filename=metrics.csv"
        '400':
          description: Invalid input
  /upload-scheduled-report:
    post:
      tags:
        - odp
      summary: Run a task for given dataset
      operationId: runTask
      parameters:
        - in: query
          name: datasetId
          schema:
            type: string
          description: Identifier of the dataset for which the task is to be run
          required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskResult'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  /update-scheduled-report:
    post:
      tags:
        - odp
      summary: Update a scheduled report
      operationId: updateScheduledReport
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduledReportUpdate'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledReport'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  /upload:
    post:
      tags:
        - odp
      summary: Upload metrics
      operationId: uploadMetrics
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MetricsDataInput'
      responses:
        '200':
          description: Successful operation
          content:
            text/csv:
              schema:
                type: string
                example: "metric1,metric2,metric3\nvalue1,value2,value3"
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  /csv:
    post:
      tags:
        - analytics
      summary: Generate CSV
      description: This endpoint generates a CSV file based on the provided data.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CsvRequestBody'
      responses:
        '200':
          description: Successfully generated CSV
          content:
            text/csv:
              schema:
                type: string
              example: 'column1,column2,column3\nvalue1,value2,value3\n'
          headers:
            Content-disposition:
              schema:
                type: string
                example: "attachment;filename=metrics.csv"
        '400':
          description: Bad request, missing parameters
          content:
            text/plain:
              schema:
                type: string
              example: 'missing parameters'
components:
  schemas:
    Dataset:
      type: object
      properties:
        nameEt:
          type: string
          example: 'mock'
        nameEn:
          type: string
          example: 'mock'
        descriptionEt:
          type: string
          example: 'mock'
        descriptionEn:
          type: string
          example: 'mock'
        maintainer:
          type: string
          example: 'mock'
        maintainerEmail:
          type: string
          example: 'mock'
        regionIds:
          type: array
          items:
            type: integer
          example: [1]
        keywordIds:
          type: array
          items:
            type: integer
          example: [12777]
        categoryIds:
          type: array
          items:
            type: integer
          example: [13]
        updateIntervalUnit:
          type: string
          example: 'day'
        updateIntervalFrequency:
          type: integer
          example: 1
        dataFrom:
          type: string
          format: date-time
          example: '2023-02-16T14:51:33Z'
        access:
          type: string
          example: 'public'
        licenceId:
          type: integer
          example: 1
    DatasetOutput:
      type: object
      properties:
        jobId:
          type: string
          example: 'some-unique-id'
        dataset_id:
          type: string
          example: 'datasetId'
    ScheduledReports:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
            format: int8
            example: 1
          name:
            type: string
            example: 'Report 1'
          period:
            type: string
            example: 'daily'
          metrics:
            type: array
            items:
              type: string
            example: [ 'metric1', 'metric2' ]
          job_id:
            type: string
            example: 'job1'
          dataset_id:
            type: string
            example: 'dataset1'
          created:
            type: string
            format: date-time
            example: '2023-07-21T17:32:28Z'
          updated:
            type: string
            format: date-time
            example: '2023-07-23T17:32:28Z'
    ODPSettings:
      type: object
      properties:
        keyId:
          type: string
          example: 'key1'
        apiKey:
          type: string
          example: 'api1'
        orgId:
          type: string
          example: 'org1'
    ValuesData:
      type: object
      properties:
        keywords:
          type: array
          items:
            type: string
          example: [ 'keyword1', 'keyword2' ]
        categories:
          type: array
          items:
            type: string
          example: [ 'category1', 'category2' ]
        regions:
          type: array
          items:
            type: string
          example: [ 'region1', 'region2' ]
        licences:
          type: array
          items:
            type: string
          example: [ 'licence1', 'licence2' ]
    MetricsData:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
          example: [ { "date": "2023-01-01", "value": 300 }, { "date": "2023-01-02", "value": 320 } ]
    MetricsDataInput:
      type: object
      properties:
        metrics:
          type: array
          items:
            type: string
          description: Array of metrics to fetch data for
          example: [ 'get-chat-count-total', 'get-avg-waiting-time' ]
        start:
          type: string
          format: date-time
          description: Start of the time period for which to fetch data
          example: '2023-07-01T00:00:00Z'
        end:
          type: string
          format: date-time
          description: End of the time period for which to fetch data
          example: '2023-07-31T23:59:59Z'
        period:
          type: string
          description: Period for the metrics data
          example: 'month'
    PreferencesUpdateBody:
      type: object
      properties:
        active:
          type: boolean
          description: Active state
        metric:
          type: string
          description: The metric
        ordinality:
          type: integer
          description: The ordinality
      required:
        - active
        - metric
        - ordinality
    TimeData:
      type: object
      properties:
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        period:
          type: string
      required:
        - start_date
        - end_date
        - period
    IntentData:
      type: object
      properties:
        time:
          type: string
          format: date-time
          example: '2022-01-01 00:00:00+00'
        intent:
          type: string
          example: 'COMPLAIN'
        intent_count:
          type: integer
          example: 1
    OptionsData:
      type: object
      properties:
        options:
          type: array
          items:
            type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        period:
          type: string
      required:
        - options
        - start_date
        - end_date
        - period
    StatusData:
      type: object
      properties:
        metric:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        events:
          type: array
          items:
            type: string
        csa_events:
          type: array
          items:
            type: string
      required:
        - metric
        - start_date
        - end_date
    MetricData:
      type: object
      properties:
        metric:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
      required:
        - metric
        - start_date
        - end_date
    ChatsWithNegativeFeedbackData:
      type: object
      properties:
        events:
          type: array
          items:
            type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
      required:
        - events
        - start_date
        - end_date
    SelectedCsaFeedbackNpsData:
      type: object
      properties:
        metric:
          type: string
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        excluded_csas:
          type: array
          items:
            type: string
      required:
        - metric
        - start_date
        - end_date
        - excluded_csas
    MockedJwtUserInfo:
      type: object
      properties:
        sub:
          type: string
          example: ""
        firstName:
          type: string
          example: "Jo Doe"
        idCode:
          type: string
          example: "EE39210112757"
        displayName:
          type: string
          example: "Jo Doe"
        iss:
          type: string
          example: "test.buerokratt.ee"
        exp:
          type: integer
          example: 1674026157
        login:
          type: string
          example: "EE39210112757"
        iat:
          type: integer
          example: 1674026157
        jti:
          type: string
          example: "e0000000-3000-4000-8000-cceeccc43ccc"
        authorities:
          type: array
          items:
            type: string
          example:
            - "ROLE_ANALYST"
            - "ROLE_ANALYST2"
    DeleteScheduledReportRequest:
      type: object
      properties:
        datasetId:
          type: string
          description: ID of the dataset
          example: '1234'
    DeleteResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Indicates if the operation was successful
          example: true
    Metrics:
      type: object
      properties:
        metrics:
          type: array
          items:
            type: string
          description: List of metrics to download
          example: [ "metric1", "metric2" ]
        start:
          type: string
          format: date-time
          description: Start date-time for the metrics
          example: "2023-07-25T00:00:00Z"
        end:
          type: string
          format: date-time
          description: End date-time for the metrics
          example: "2023-07-30T23:59:59Z"
    TaskResult:
      type: object
      properties:
        metrics:
          type: array
          items:
            type: string
          description: List of metrics included in the task result
          example: [ "metric1", "metric2" ]
        start:
          type: string
          description: Start date of the task
          example: "today"
        end:
          type: string
          description: End date of the task
          example: "today"
        period:
          type: string
          description: Period of the task
          example: "daily"
        datasetId:
          type: string
          description: Identifier of the dataset for which the task was run
          example: "dataset1"
    ScheduledReportUpdate:
      type: object
      properties:
        datasetId:
          type: string
        nameEt:
          type: string
        nameEn:
          type: string
        descriptionEt:
          type: string
        descriptionEn:
          type: string
        maintainer:
          type: string
        maintainerEmail:
          type: string
        regionIds:
          type: array
          items:
            type: string
        keywordIds:
          type: array
          items:
            type: string
        categoryIds:
          type: array
          items:
            type: string
        updateIntervalUnit:
          type: string
        updateIntervalFrequency:
          type: string
        dataFrom:
          type: string
        access:
          type: string
        licenceId:
          type: string
        cron_expression:
          type: string
      required:
        - datasetId
        - nameEt
        - nameEn
        - descriptionEt
        - descriptionEn
        - maintainer
        - maintainerEmail
        - regionIds
        - keywordIds
        - categoryIds
        - updateIntervalUnit
        - updateIntervalFrequency
        - dataFrom
        - access
        - licenceId
        - cron_expression
    ScheduledReport:
      type: object
      properties:
        name:
          type: string
        period:
          type: string
        metrics:
          type: string
        job_id:
          type: string
        dataset_id:
          type: string
    CsvRequestBody:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
          description: The data to be converted into CSV.
          example:
            - column1: value1
              column2: value2
              column3: value3
        del:
          type: string
          description: The delimiter for the CSV data.
          example: ','
        qul:
          type: string
          description: The qualifier for the CSV data.
          example: '"'
        layout:
          type: boolean
          description: Whether to include layout in the CSV.
          example: false
      required:
        - data
        - del
        - qul
        - layout
